// Script cập nhật dashboard components với 19 nhóm chuẩn
// Generated: Auto-generated by system

const fs = require('fs');
const path = require('path');

// Cấu hình 19 nhóm chuẩn theo 5 cụm lớn
const NHOM_19_CONFIG = {
    "KINH_DOANH_TU_VAN": {
        title: "🎯 Kinh Doanh Tư Vấn Tuyến Đầu",
        description: "Tiếp xúc khách hàng, tạo doanh thu, kỹ năng thuyết phục",
        groups: [
            { id: 1, name: "MSA - Marketing Sales Admission", shortName: "MSA", count: 52, target: 60 },
            { id: 5, name: "Kokateam Việt Nam", shortName: "Kokateam VN", count: 28, target: 28 },
            { id: 10, name: "EsuWorks - Tuyển dụng trong nước", shortName: "EsuWorks", count: 10, target: 7 },
            { id: 11, name: "Gate Awards - Tư vạn du học cao cấp", shortName: "Gate Awards", count: 7, target: 7 }
        ]
    },
    "DAO_TAO_GIAO_DUC": {
        title: "📚 Đào Tạo Giáo Dục",
        description: "Giảng dạy trực tiếp, phát triển năng lực học viên",
        groups: [
            { id: 3, name: "Kaizen Yoshida School", shortName: "Kaizen", count: 121, target: 104 },
            { id: 4, name: "JPC - Japan Professional College", shortName: "JPC", count: 3, target: 5 },
            { id: 7, name: "ProSkills - Phát triển kỹ năng", shortName: "ProSkills", count: 15, target: 14 },
            { id: 9, name: "EsuCare - Chăm sóc con người", shortName: "EsuCare", count: 2, target: 2 }
        ]
    },
    "DICH_VU_VAN_HANH": {
        title: "⚙️ Dịch Vụ Vận Hành",
        description: "Xử lý hồ sơ, hỗ trợ sau bán, thực hiện quy trình",
        groups: [
            { id: 2, name: "IDS - International Dispatch Services", shortName: "IDS", count: 24, target: 24 },
            { id: 8, name: "EsuTech - Kỹ sư & Outsourcing", shortName: "EsuTech", count: 33, target: 30 },
            { id: 12, name: "Nhân Sự", shortName: "HR", count: 10, target: 7 },
            { id: 15, name: "Tổng Hợp - Hành chính", shortName: "Tổng Hợp", count: 34, target: 30 }
        ]
    },
    "HO_TRO_CHUYEN_MON": {
        title: "🔧 Hỗ Trợ Chuyên Môn",
        description: "Tư vấn chuyên sâu, kiểm soát rủi ro, đảm bảo tuân thủ",
        groups: [
            { id: 13, name: "Pháp Chế", shortName: "Legal", count: 7, target: 7 },
            { id: 14, name: "Tài Chính Kế Toán", shortName: "Finance", count: 9, target: 8 },
            { id: 16, name: "Alesu Truyền Thông", shortName: "Media", count: 15, target: 12 },
            { id: 17, name: "Alesu CNTT", shortName: "IT", count: 13, target: 10 }
        ]
    },
    "QUAN_LY_DIEU_HANH": {
        title: "👑 Quản Lý Điều Hành",
        description: "Lãnh đạo chiến lược, ra quyết định, đại diện đối ngoại",
        groups: [
            { id: 18, name: "Ban Thư Ký Trợ Lý", shortName: "Assistant", count: 6, target: 6 },
            { id: 19, name: "BOD - Ban Tổng Giám Đốc", shortName: "BOD", count: 7, target: 9 }
        ]
    }
};

function updateDashboardConfig() {
    try {
        // 1. Tạo config file chính
        const configDir = path.join(__dirname, '../frontend/src/config');
        if (!fs.existsSync(configDir)) {
            fs.mkdirSync(configDir, { recursive: true });
        }
        
        const configPath = path.join(configDir, 'nhom-19-config.js');
        const configContent = `// Cấu hình 19 nhóm chuẩn - Auto generated ${new Date().toISOString()}
export const NHOM_19_CONFIG = ${JSON.stringify(NHOM_19_CONFIG, null, 2)};

export const getAllNhom = () => {
    return Object.values(NHOM_19_CONFIG).flatMap(cum => cum.groups);
};

export const getNhomByCum = (cumKey) => {
    return NHOM_19_CONFIG[cumKey]?.groups || [];
};

export const getTotalEmployees = () => {
    return Object.values(NHOM_19_CONFIG)
        .flatMap(cum => cum.groups)
        .reduce((total, group) => total + group.count, 0);
};

export const getTotalByStatus = () => {
    const total = getTotalEmployees();
    const target = Object.values(NHOM_19_CONFIG)
        .flatMap(cum => cum.groups)
        .reduce((total, group) => total + group.target, 0);
    
    return { actual: total, target, variance: total - target };
};

export const getCumColors = () => {
    return {
        'KINH_DOANH_TU_VAN': '#3B82F6',
        'DAO_TAO_GIAO_DUC': '#10B981', 
        'DICH_VU_VAN_HANH': '#F59E0B',
        'HO_TRO_CHUYEN_MON': '#8B5CF6',
        'QUAN_LY_DIEU_HANH': '#EF4444'
    };
};

export const getNhomByName = (nhomName) => {
    const allGroups = getAllNhom();
    return allGroups.find(group => group.name === nhomName);
};

export const getCumByNhom = (nhomName) => {
    for (const [cumKey, cumData] of Object.entries(NHOM_19_CONFIG)) {
        if (cumData.groups.some(group => group.name === nhomName)) {
            return { key: cumKey, ...cumData };
        }
    }
    return null;
};
`;
        
        fs.writeFileSync(configPath, configContent);
        console.log(`✅ Đã tạo config: ${configPath}`);
        
        // 2. Cập nhật component dashboard chính
        const dashboardDir = path.join(__dirname, '../frontend/src/components/Dashboard');
        if (!fs.existsSync(dashboardDir)) {
            fs.mkdirSync(dashboardDir, { recursive: true });
        }
        
        const dashboardPath = path.join(dashboardDir, 'Dashboard19Nhom.jsx');
        const dashboardContent = `// Dashboard component cho 19 nhóm chuẩn - Auto generated ${new Date().toISOString()}
import React, { useState, useEffect } from 'react';
import { NHOM_19_CONFIG, getAllNhom, getTotalEmployees, getCumColors } from '../../config/nhom-19-config.js';

const Dashboard19Nhom = () => {
    const [selectedCum, setSelectedCum] = useState(null);
    const [stats, setStats] = useState({});
    
    useEffect(() => {
        // Load stats from API or calculate from data
        const totalStats = {
            totalEmployees: getTotalEmployees(),
            totalGroups: getAllNhom().length,
            totalCums: Object.keys(NHOM_19_CONFIG).length
        };
        setStats(totalStats);
    }, []);
    
    const colors = getCumColors();
    
    return (
        <div className="dashboard-19-nhom p-6">
            <div className="header mb-8">
                <h1 className="text-3xl font-bold text-gray-800 mb-2">
                    📊 Dashboard 19 Nhóm Chuẩn
                </h1>
                <p className="text-gray-600">
                    Hệ thống đánh giá nhân sự theo 5 cụm lớn - {stats.totalEmployees} nhân viên
                </p>
            </div>
            
            {/* Overview Cards */}
            <div className="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8">
                <div className="bg-blue-500 text-white p-6 rounded-lg">
                    <h3 className="text-xl font-semibold mb-2">Tổng Nhân Viên</h3>
                    <p className="text-3xl font-bold">{stats.totalEmployees}</p>
                </div>
                <div className="bg-green-500 text-white p-6 rounded-lg">
                    <h3 className="text-xl font-semibold mb-2">Số Nhóm</h3>
                    <p className="text-3xl font-bold">{stats.totalGroups}</p>
                </div>
                <div className="bg-purple-500 text-white p-6 rounded-lg">
                    <h3 className="text-xl font-semibold mb-2">Cụm Lớn</h3>
                    <p className="text-3xl font-bold">{stats.totalCums}</p>
                </div>
            </div>
            
            {/* Cụm Overview */}
            <div className="grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 gap-6">
                {Object.entries(NHOM_19_CONFIG).map(([cumKey, cumData]) => (
                    <div 
                        key={cumKey}
                        className="bg-white rounded-lg shadow-lg p-6 hover:shadow-xl transition-shadow cursor-pointer"
                        onClick={() => setSelectedCum(selectedCum === cumKey ? null : cumKey)}
                        style={{ borderLeft: \`4px solid \${colors[cumKey]}\` }}
                    >
                        <h3 className="text-xl font-semibold mb-3">{cumData.title}</h3>
                        <p className="text-gray-600 text-sm mb-4">{cumData.description}</p>
                        
                        <div className="space-y-2">
                            {cumData.groups.map(group => (
                                <div key={group.id} className="flex justify-between items-center">
                                    <span className="text-sm text-gray-700">{group.shortName}</span>
                                    <span className="font-semibold text-gray-900">{group.count}</span>
                                </div>
                            ))}
                        </div>
                        
                        <div className="mt-4 pt-4 border-t">
                            <div className="flex justify-between font-semibold">
                                <span>Tổng cụm:</span>
                                <span>{cumData.groups.reduce((sum, g) => sum + g.count, 0)}</span>
                            </div>
                        </div>
                    </div>
                ))}
            </div>
            
            {/* Detail Modal */}
            {selectedCum && (
                <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
                    <div className="bg-white rounded-lg p-8 max-w-4xl w-full mx-4 max-h-90vh overflow-y-auto">
                        <div className="flex justify-between items-center mb-6">
                            <h2 className="text-2xl font-bold">{NHOM_19_CONFIG[selectedCum].title}</h2>
                            <button 
                                onClick={() => setSelectedCum(null)}
                                className="text-gray-500 hover:text-gray-700 text-2xl"
                            >
                                ×
                            </button>
                        </div>
                        
                        <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                            {NHOM_19_CONFIG[selectedCum].groups.map(group => (
                                <div key={group.id} className="border rounded-lg p-4">
                                    <h4 className="font-semibold mb-2">{group.name}</h4>
                                    <div className="text-sm text-gray-600 space-y-1">
                                        <div className="flex justify-between">
                                            <span>Thực tế:</span>
                                            <span className="font-medium">{group.count} người</span>
                                        </div>
                                        <div className="flex justify-between">
                                            <span>Mục tiêu:</span>
                                            <span className="font-medium">{group.target} người</span>
                                        </div>
                                        <div className="flex justify-between">
                                            <span>Chênh lệch:</span>
                                            <span className={\`font-medium \${group.count >= group.target ? 'text-green-600' : 'text-red-600'}\`}>
                                                {group.count >= group.target ? '+' : ''}{group.count - group.target}
                                            </span>
                                        </div>
                                    </div>
                                </div>
                            ))}
                        </div>
                    </div>
                </div>
            )}
        </div>
    );
};

export default Dashboard19Nhom;
`;
        
        fs.writeFileSync(dashboardPath, dashboardContent);
        console.log(`✅ Đã tạo dashboard component: ${dashboardPath}`);
        
        // 3. Tạo file constants cho mapping
        const constantsPath = path.join(configDir, 'nhom-mapping.js');
        const constantsContent = `// Mapping constants cho 19 nhóm chuẩn - Auto generated ${new Date().toISOString()}
export const PHONG_TO_NHOM_MAPPING = {
    "ALESU_CNTT": "Alesu CNTT",
    "ALESU_TRUYỀN THÔNG": "Alesu Truyền Thông", 
    "BAN THƯ KÝ TRỢ LÝ": "Ban Thư Ký Trợ Lý",
    "BOD (BAN TỔNG GIÁM ĐỐC)": "BOD - Ban Tổng Giám Đốc",
    "ESUCARE": "EsuCare - Chăm sóc con người",
    "ESUTECH": "EsuTech - Kỹ sư & Outsourcing",
    "ESUWORKS": "EsuWorks - Tuyển dụng trong nước",
    "GATE AWARDS": "Gate Awards - Tư vạn du học cao cấp",
    "IDS": "IDS - International Dispatch Services",
    "JPC": "JPC - Japan Professional College",
    "KAIZEN": "Kaizen Yoshida School",
    "Kaizen": "Kaizen Yoshida School", 
    "KOKATEAM": "Kokateam Việt Nam",
    "MSA": "MSA - Marketing Sales Admission",
    "NHÂN SỰ": "Nhân Sự", 
    "PHÁP CHẾ": "Pháp Chế",
    "PROSKILLS": "ProSkills - Phát triển kỹ năng",
    "TÀI CHÍNH KẾ TOÁN": "Tài Chính Kế Toán",
    "TỔNG HỢP": "Tổng Hợp - Hành chính"
};

export const mapPhongToNhom = (phong) => {
    return PHONG_TO_NHOM_MAPPING[phong] || 'CHƯA MAPPING';
};

export const getAllPhongNames = () => {
    return Object.keys(PHONG_TO_NHOM_MAPPING);
};

export const getAllNhomNames = () => {
    return [...new Set(Object.values(PHONG_TO_NHOM_MAPPING))];
};
`;
        
        fs.writeFileSync(constantsPath, constantsContent);
        console.log(`✅ Đã tạo mapping constants: ${constantsPath}`);
        
        console.log('🎯 HOÀN TẤT CẬP NHẬT DASHBOARD CONFIG!');
        
        return {
            success: true,
            files: [configPath, dashboardPath, constantsPath]
        };
        
    } catch (error) {
        console.error('❌ Lỗi khi cập nhật dashboard config:', error);
        return {
            success: false,
            error: error.message
        };
    }
}

// Chạy script
if (require.main === module) {
    updateDashboardConfig();
}

module.exports = { updateDashboardConfig, NHOM_19_CONFIG };